
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String?   @unique
  name      String?
  number    String?
  type      UserType
  organisations Organisation? @relation(fields: [organisationId], references: [id])
  organisationId String?
  bookings  Booking[]
  @@index([organisationId])
}

model Organisation {
  id        String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  created_by String?
  name      String   @unique
  users     User[]
  facilities Facility[]
}

model Facility {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  email    String?
  organisations Organisation? @relation(fields: [organisationId], references: [id])
  organisationId String?
  Venues Venue[]
  bookings  Booking[]
  latitude String?
  longitude String?
  address String?
  description String?
  @@index([organisationId])
}

model Venue {
  id        String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  facility Facility? @relation(fields: [facilityId], references: [id])
  facilityId String?
  schedules Schedule[]
  bookings  Booking[]
  latitude String?
  longitude String?
  address String?
  description String?
  type VenueType
  sportType SportVenueType?
  maxPlayersCapacity Int?
  @@index ([facilityId])
}

model Booking {
  id            String      @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  facility      Facility @relation(fields: [facilityId], references: [id])
  facilityId    String
  venues       Venue @relation(fields: [venueId], references: [id])
  venueId       String
  startTime     DateTime
  endTime       DateTime

  @@index([userId])
  @@index([facilityId])
  @@index([venueId])
}

model Schedule {
  id          String    @id
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  venue       Venue     @relation(fields: [venueId], references: [id])
  venueId     String
  dayOfWeek   Int
  startTime   DateTime
  endTime     DateTime

  @@index([venueId])
}

enum UserType {
  ADMIN
  USER
}

enum VenueType {
  INDOOR
  OUTDOOR
}

enum SportVenueType {
  Football
  Voley
  Basketball
  Tennis
  Badminton
  Handball
}